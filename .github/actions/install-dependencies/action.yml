name: Jogasaki-Install-Dependencies

inputs:
  sharksfin_implementation:
    description: switch sharksfin implementation
    default: shirakami
  checkout:
    description: Skip checkout if false
    default: true
  path:
    description: Relative path under $GITHUB_WORKSPACE to place the repository
    default: build-deps
  cmake_build_option:
    type: string
    default: ''

runs:
  using: "composite"

  steps:
    - name: Checkout_Takatori
      uses: actions/checkout@v4
      if: ${{ inputs.checkout == 'true' }}
      with:
        repository: project-tsurugi/takatori
        path: ${{ inputs.path }}/takatori
        ref: master

    - name: Checkout_Yugawara
      uses: actions/checkout@v4
      if: ${{ inputs.checkout == 'true' }}
      with:
        repository: project-tsurugi/yugawara
        path: ${{ inputs.path }}/yugawara
        ref: master
        submodules: true

    - name: Checkout_Mizugaki
      uses: actions/checkout@v4
      if: ${{ inputs.checkout == 'true' }}
      with:
        repository: project-tsurugi/mizugaki
        path: ${{ inputs.path }}/mizugaki
        ref: master

    - name: Checkout_Limestone
      uses: actions/checkout@v4
      if: ${{ inputs.checkout == 'true' }}
      with:
        repository: project-tsurugi/limestone
        path: ${{ inputs.path }}/limestone
        ref: master

    - name: Checkout_Yakushima
      uses: actions/checkout@v4
      if: ${{ inputs.checkout == 'true' && inputs.sharksfin_implementation == 'shirakami' }}
      with:
        repository: project-tsurugi/yakushima
        path: ${{ inputs.path }}/yakushima
        ref: master

    - name: Checkout_Shirakami
      uses: actions/checkout@v4
      if: ${{ inputs.checkout == 'true' && inputs.sharksfin_implementation == 'shirakami' }}
      with:
        repository: project-tsurugi/shirakami
        path: ${{ inputs.path }}/shirakami
        ref: master

    - name: Checkout_Sharksfin
      uses: actions/checkout@v4
      if: ${{ inputs.checkout == 'true' }}
      with:
        repository: project-tsurugi/sharksfin
        path: ${{ inputs.path }}/sharksfin
        ref: master

    - name: Checkout_Tateyama
      uses: actions/checkout@v4
      if: ${{ inputs.checkout == 'true' }}
      with:
        repository: project-tsurugi/tateyama
        path: ${{ inputs.path }}/tateyama
        ref: master
        submodules: true

    - name: Install_Takatori
      run: |
        cd ${{ inputs.path }}/takatori
        rm -fr build
        mkdir build
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DBUILD_TESTS=OFF -DBUILD_DOCUMENTS=OFF -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/.local ${{ inputs.cmake_build_option }} ..
        cmake --build . --target install --clean-first
      shell: bash

    - name: Install_hopscotch-map
      run: |
        cd ${{ inputs.path }}/yugawara/third_party/hopscotch-map
        rm -fr ../../build-hopscotch-map
        mkdir ../../build-hopscotch-map
        cd ../../build-hopscotch-map
        cmake -G Ninja -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/.local ${{ inputs.cmake_build_option }} ../third_party/hopscotch-map
        cmake --build . --target install
      shell: bash

    - name: Install_Yugawara
      run: |
        cd ${{ inputs.path }}/yugawara
        rm -fr build
        mkdir build
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DBUILD_TESTS=OFF -DBUILD_DOCUMENTS=OFF -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/.local ${{ inputs.cmake_build_option }} ..
        cmake --build . --target install --clean-first
      shell: bash

    - name: Install_Mizugaki
      run: |
        cd ${{ inputs.path }}/mizugaki
        rm -fr build
        mkdir build
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DBUILD_TESTS=OFF -DBUILD_DOCUMENTS=OFF -DBUILD_EXAMPLES=OFF -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/.local ${{ inputs.cmake_build_option }} ..
        cmake --build . --target install --clean-first
      shell: bash

    - name: Install_Limestone
      run: |
        cd ${{ inputs.path }}/limestone
        rm -fr build
        mkdir build
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DBUILD_TESTS=OFF -DBUILD_DOCUMENTS=OFF -DBUILD_EXAMPLES=OFF -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/.local ${{ inputs.cmake_build_option }} ..
        cmake --build . --target install --clean-first
      shell: bash

    - name: Install_Yakushima
      if: ${{ inputs.sharksfin_implementation == 'shirakami' }}
      run: |
        cd ${{ inputs.path }}/yakushima
        rm -fr build
        mkdir build
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DBUILD_TESTS=OFF -DBUILD_DOCUMENTS=OFF -DBUILD_BENCHMARK=OFF -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/.local ${{ inputs.cmake_build_option }} ..
        cmake --build . --target install --clean-first
      shell: bash

    - name: Install_Shirakami
      if: ${{ inputs.sharksfin_implementation == 'shirakami' }}
      run: |
        cd ${{ inputs.path }}/shirakami
        rm -fr build
        mkdir build
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DBUILD_TESTS=OFF -DBUILD_DOCUMENTS=OFF -DBUILD_BENCHMARK=OFF -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/.local ${{ inputs.cmake_build_option }} ..
        cmake --build . --target install --clean-first
      shell: bash

    - name: Install_Sharksfin
      run: |
        if [[ "${{ inputs.sharksfin_implementation }}" == "memory" ]]; then
          _OPTS="-DBUILD_MEMORY=ON -DBUILD_SHIRAKAMI=OFF"
        fi

        cd ${{ inputs.path }}/sharksfin
        rm -fr build
        mkdir build
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DBUILD_TESTS=OFF -DBUILD_DOCUMENTS=OFF -DBUILD_EXAMPLES=OFF -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/.local ${_OPTS} ${{ inputs.cmake_build_option }} ..
        cmake --build . --target install --clean-first
      shell: bash

    - name: Install_moodycamel_Concurrentqueue
      run: |
        cd ${{ inputs.path }}/tateyama/third_party/concurrentqueue
        rm -fr build_debug
        mkdir build_debug
        cd build_debug
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/.local ${{ inputs.cmake_build_option }} ..
        cmake --build . --target install --clean-first
      shell: bash

    - name: Install_Tateyama
      run: |
        cd ${{ inputs.path }}/tateyama
        rm -fr build
        mkdir build
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DSHARKSFIN_IMPLEMENTATION=${{ inputs.sharksfin_implementation }} -DBUILD_TESTS=OFF -DBUILD_DOCUMENTS=OFF -DBUILD_BENCHMARK=OFF -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/.local ${{ inputs.cmake_build_option }} ..
        cmake --build . --target install --clean-first
      shell: bash
